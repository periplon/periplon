# Vulnerability Scanning - Automated vulnerability detection
name: "vulnerability_scanning"
version: "1.0"

agents:
  discovery_agent:
    description: "Discovers network assets"
    model: "claude-sonnet-4-5"
    tools: ["Bash", "Read", "Write"]
    permissions:
      mode: "default"
      allowed_directories: ["/vulnscan/discovery"]
    max_turns: 15

  scanning_agent:
    description: "Scans for vulnerabilities"
    model: "claude-sonnet-4-5"
    tools: ["Bash", "Read", "Write"]
    permissions:
      mode: "default"
      allowed_directories: ["/vulnscan/scans"]
    max_turns: 25

  fallback_scanning_agent:
    description: "Fallback vulnerability scanning agent"
    model: "claude-sonnet-4-5"
    tools: ["Bash", "Read", "Write"]
    permissions:
      mode: "default"
      allowed_directories: ["/vulnscan/scans"]
    max_turns: 25

  analysis_agent:
    description: "Analyzes scan results"
    model: "claude-sonnet-4-5"
    tools: ["Bash", "Read", "Write"]
    permissions:
      mode: "default"
      allowed_directories: ["/vulnscan/analysis"]
    max_turns: 20

  prioritization_agent:
    description: "Prioritizes vulnerabilities"
    model: "claude-sonnet-4-5"
    tools: ["Bash", "Read", "Write"]
    permissions:
      mode: "default"
      allowed_directories: ["/vulnscan/priorities"]
    max_turns: 15

  reporting_agent:
    description: "Generates vulnerability reports"
    model: "claude-sonnet-4-5"
    tools: ["Read", "Write"]
    permissions:
      mode: "default"
      allowed_directories: ["/vulnscan/reports"]
    max_turns: 12

tasks:
  discover_assets:
    description: "Discover network assets and services"
    agent: "discovery_agent"
    priority: 1
    output: "asset_discovery.log"

  categorize_assets:
    description: "Categorize discovered assets"
    agent: "discovery_agent"
    depends_on: ["discover_assets"]
    output: "asset_categorization.log"

  scan_network:
    description: "Scan network infrastructure"
    agent: "scanning_agent"
    depends_on: ["categorize_assets"]
    parallel_with: ["scan_web_apps", "scan_databases"]
    output: "network_scan.log"
    on_error:
      retry: 2
      retry_delay_secs: 20
      exponential_backoff: true
      fallback_agent: "fallback_scanning_agent"

  scan_web_apps:
    description: "Scan web applications"
    agent: "scanning_agent"
    depends_on: ["categorize_assets"]
    parallel_with: ["scan_network", "scan_databases"]
    output: "webapp_scan.log"

  scan_databases:
    description: "Scan database systems"
    agent: "scanning_agent"
    depends_on: ["categorize_assets"]
    parallel_with: ["scan_network", "scan_web_apps"]
    output: "database_scan.log"

  correlate_findings:
    description: "Correlate vulnerability findings"
    agent: "analysis_agent"
    depends_on: ["scan_network", "scan_web_apps", "scan_databases"]
    output: "correlation.log"

  verify_vulnerabilities:
    description: "Verify identified vulnerabilities"
    agent: "analysis_agent"
    depends_on: ["correlate_findings"]
    output: "verification.log"

  calculate_cvss:
    description: "Calculate CVSS scores"
    agent: "prioritization_agent"
    depends_on: ["verify_vulnerabilities"]
    output: "cvss_scores.log"

  assess_exploitability:
    description: "Assess vulnerability exploitability"
    agent: "prioritization_agent"
    depends_on: ["calculate_cvss"]
    output: "exploitability.log"

  prioritize_remediation:
    description: "Prioritize remediation efforts"
    agent: "prioritization_agent"
    depends_on: ["assess_exploitability"]
    output: "remediation_priorities.log"

  generate_report:
    description: "Generate vulnerability assessment report"
    agent: "reporting_agent"
    depends_on: ["prioritize_remediation"]
    output: "vulnerability_report.html"

workflows:
  scan_vulnerabilities:
    description: "Automated vulnerability scanning with combined recovery"
    steps:
      - stage: "discovery"
        agents: ["discovery_agent"]
        tasks:
          - discover_assets:
              description: "Discover network assets and services"
          - categorize_assets:
              description: "Categorize discovered assets"
        mode: sequential

      - stage: "scanning"
        agents: ["scanning_agent", "fallback_scanning_agent"]
        tasks:
          - scan_network:
              description: "Scan network infrastructure"
          - scan_web_apps:
              description: "Scan web applications"
          - scan_databases:
              description: "Scan database systems"
        mode: parallel
        depends_on: ["discovery"]

      - stage: "analysis"
        agents: ["analysis_agent"]
        tasks:
          - correlate_findings:
              description: "Correlate vulnerability findings"
          - verify_vulnerabilities:
              description: "Verify identified vulnerabilities"
        mode: sequential
        depends_on: ["scanning"]

      - stage: "prioritization"
        agents: ["prioritization_agent"]
        tasks:
          - calculate_cvss:
              description: "Calculate CVSS scores"
          - assess_exploitability:
              description: "Assess vulnerability exploitability"
          - prioritize_remediation:
              description: "Prioritize remediation efforts"
        mode: sequential
        depends_on: ["analysis"]

      - stage: "reporting"
        agents: ["reporting_agent"]
        tasks:
          - generate_report:
              description: "Generate vulnerability assessment report"
        mode: sequential
        depends_on: ["prioritization"]

    hooks:
      pre_workflow:
        - "echo 'Starting vulnerability scan'"

      post_workflow:
        - "echo 'Vulnerability scan complete'"

      on_error:
        - "echo 'Vulnerability scan error at: $WORKFLOW_STAGE'"

tools:
  allowed: ["Bash", "Read", "Write"]
  disallowed: []
  constraints:
    Bash:
      timeout: 300000
      allowed_commands: ["nessus", "openvas", "nuclei", "nmap", "masscan", "nikto", "echo", "mkdir"]
