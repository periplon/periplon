[package]
name = "periplon"
version = "0.1.0"
edition = "2021"
authors = ["Periplon Contributors"]
description = "Rust SDK for building multi-agent AI workflows and automation"
license = "MIT OR Apache-2.0"
repository = "https://github.com/periplon/periplon"
homepage = "https://github.com/periplon/periplon"
documentation = "https://docs.rs/periplon"
readme = "README.md"
keywords = ["ai", "agents", "workflows", "automation", "async"]
categories = ["api-bindings", "asynchronous", "development-tools"]

[dependencies]
# Core dependencies
tokio = { version = "1.42", features = ["full"] }
tokio-stream = "0.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
schemars = "0.8"
async-stream = "0.3"
futures = "0.3"
thiserror = "2.0"
async-trait = "0.1"
which = "7.0"
regex = "1.11"
uuid = { version = "1.11", features = ["v4", "serde"] }
rand = "0.8"
clap = { version = "4.5", features = ["derive"] }
colored = "2.1"
colored_json = "5.0"
chrono = { version = "0.4", features = ["serde"] }
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
sha2 = "0.10"
hex = "0.4"
base64 = "0.22"
tempfile = "3.13"
dirs = "5.0"
git2 = { version = "0.18", default-features = false, features = ["https", "vendored-libgit2", "vendored-openssl"] }
shellexpand = "3.0"
semver = "1.0"  # Semantic versioning
petgraph = "0.6"  # Dependency graphs
log = "0.4"  # Logging facade
env_logger = "0.11"  # Environment-based logger

# Server mode dependencies (optional via features)
axum = { version = "0.7", features = ["ws", "multipart"], optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", features = ["fs", "cors", "trace"], optional = true }
sqlx = { version = "0.8", features = ["runtime-tokio", "postgres", "uuid", "chrono", "json"], optional = true }
redis = { version = "0.27", features = ["tokio-comp", "connection-manager"], optional = true }
aws-sdk-s3 = { version = "1.68", optional = true }
aws-config = { version = "1.5", optional = true }
config = { version = "0.14", optional = true }
jsonwebtoken = { version = "9.3", optional = true }
argon2 = { version = "0.5", optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"], optional = true }
prometheus = { version = "0.13", optional = true }
rust-embed = { version = "8.5", optional = true }
mime_guess = { version = "2.0", optional = true }

# TUI mode dependencies (optional via features)
ratatui = { version = "0.29", optional = true }
crossterm = { version = "0.28", optional = true }
tui-textarea = { version = "0.7", optional = true }
syntect = { version = "5.2", optional = true }

[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.13"
criterion = { version = "0.5", features = ["async_tokio", "html_reports"] }

[features]
default = ["cli"]
cli = []
cli-required-tests = []  # Enable tests that require CLI binary installed
server = [
    "axum",
    "tower",
    "tower-http",
    "sqlx",
    "redis",
    "aws-sdk-s3",
    "aws-config",
    "config",
    "jsonwebtoken",
    "argon2",
    "tracing",
    "tracing-subscriber",
    "prometheus",
    "rust-embed",
    "mime_guess"
]
tui = [
    "ratatui",
    "crossterm",
    "tui-textarea",
    "syntect"
]
full = ["cli", "server", "tui"]

[lib]
name = "periplon_sdk"
path = "src/lib.rs"

[[example]]
name = "simple_query"
path = "examples/sdk/simple_query.rs"

[[example]]
name = "interactive_client"
path = "examples/sdk/interactive_client.rs"

[[example]]
name = "interactive_client_debug"
path = "examples/sdk/interactive_client_debug.rs"

[[example]]
name = "test_stream_mode"
path = "examples/sdk/test_stream_mode.rs"

[[example]]
name = "dsl_executor_example"
path = "examples/sdk/dsl_executor_example.rs"

[[example]]
name = "data_fetcher_demo"
path = "examples/sdk/data_fetcher_demo.rs"

[[example]]
name = "foreach_demo"
path = "examples/sdk/foreach_demo.rs"

[[example]]
name = "repeat_demo"
path = "examples/sdk/repeat_demo.rs"

[[example]]
name = "while_demo"
path = "examples/sdk/while_demo.rs"

[[example]]
name = "polling_demo"
path = "examples/sdk/polling_demo.rs"

[[example]]
name = "parallel_foreach_demo"
path = "examples/sdk/parallel_foreach_demo.rs"

[[example]]
name = "parallel_repeat_demo"
path = "examples/sdk/parallel_repeat_demo.rs"

[[example]]
name = "advanced_loop_features_demo"
path = "examples/sdk/advanced_loop_features_demo.rs"

[[example]]
name = "checkpoint_resume_demo"
path = "examples/sdk/checkpoint_resume_demo.rs"

[[example]]
name = "http_collection_demo"
path = "examples/sdk/http_collection_demo.rs"

[[example]]
name = "lockfile_demo"
path = "examples/sdk/lockfile_demo.rs"

[[bin]]
name = "periplon-executor"
path = "src/bin/periplon_executor.rs"
required-features = ["cli"]

[[bin]]
name = "periplon-tui"
path = "src/bin/periplon_tui.rs"
required-features = ["tui"]

[[bench]]
name = "dsl_benchmarks"
harness = false

# docs.rs configuration - build with all features
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# cargo-release configuration
[package.metadata.release]
# Don't publish to crates.io automatically (GitHub Actions handles this)
# publish = false  # Removed to allow manual publishing
# Use v prefix for tags (e.g., v0.1.0)
tag-prefix = "v"
# Push changes and tags to remote
push = true
# Sign tags with GPG (set to false if you don't have GPG configured)
sign-tag = false
# Commit message template
pre-release-commit-message = "chore: bump version to {{version}}"
# Don't allow dirty working directory
allow-branch = ["main"]
# Verify the project is in a good state before release
pre-release-hook = ["cargo", "test", "--all-features"]
